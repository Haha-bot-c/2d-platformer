using UnityEngine;
using System;

[RequireComponent(typeof(SpriteRenderer))]
public class EnemyMover : MonoBehaviour
{
    private const float ZeroOnX = 0;

    [SerializeField] private PlayerMover _player;
    [SerializeField] private Transform[] _waypoints;
    [SerializeField] private float _speed = 2f;
    [SerializeField] private float _viewRadius =10f;
    
    private int _currentWaypointIndex = 0;
    private Vector2 _direction;
    private SpriteRenderer _spriteRenderer;

    private void Start()
    {
        _spriteRenderer = GetComponent<SpriteRenderer>();
    }

    private void Update()
    {
        if (CanSeePlayer())
        {
            StalkPlayer();
            FlipSprait();
        }
        else
        {
            PatrolArea();
            FlipSprait();
        }
    }

    private bool CanSeePlayer()
    {
        float distance = Vector2.Distance(_player.transform.position, transform.position);

        if (distance < _viewRadius)
        {
            return true;
        }

        return false;
    }

    private void FlipSprait()
    {
        if (_direction.x > ZeroOnX)
        {
            _spriteRenderer.flipX = false;
        }
        else if (_direction.x < ZeroOnX)
        {
            _spriteRenderer.flipX = true;
        }
    }

    private void PatrolArea()
    {
        transform.position = Vector2.MoveTowards(transform.position, _waypoints[_currentWaypointIndex].position, _speed * Time.deltaTime);
        _direction = _waypoints[_currentWaypointIndex].position - transform.position;

        if (transform.position == _waypoints[_currentWaypointIndex].position)
        {
            _currentWaypointIndex = (++_currentWaypointIndex) % _waypoints.Length;
        }
    }
    
    private void StalkPlayer()
    {
        transform.Translate(_direction * _speed * Time.deltaTime);
        _direction = _player.transform.position - transform.position;
    }
}
